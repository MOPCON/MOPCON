name: Deploy to DigitalOcean
on:
  pull_request:
    branches:
      - develop
      - deploy
    types:
      - opened
      - synchronize
      - reopened

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Build project
        run: |
          cd 2024
          npm install
          npm run build

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEANTOKEN }}

      - name: Get Droplet IP
        id: get-droplet-ip
        run: |
          DROPLET_IP=$(doctl compute droplet list --format PublicIPv4 --no-header --tag-name website)
          if [ -z "$DROPLET_IP" ]; then
            echo "Error: No Droplet IP found. Please check if the Droplet is correctly tagged and has a public IP."
            exit 1
          fi
          echo "Droplet IP: $DROPLET_IP"
          echo "droplet_ip=$DROPLET_IP" >> $GITHUB_ENV

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ env.droplet_ip }} >> ~/.ssh/known_hosts

      - name: Deploy to Droplet
        run: |
          if [ "${GITHUB_BASE_REF}" == "develop" ]; then
            TARGET_DIR="/var/www/mopcon-dev/2024"
          elif [ "${GITHUB_BASE_REF}" == "deploy" ]; then
            TARGET_DIR="/var/www/mopcon/2024"
          else
            echo "No valid branch for deployment"
            exit 1
          fi
          ssh -o StrictHostKeyChecking=no root@${{ env.droplet_ip }} "mkdir -p ${TARGET_DIR}"
          rsync -avz --delete -e "ssh -o StrictHostKeyChecking=no" 2024/out/ root@${{ env.droplet_ip }}:${TARGET_DIR}

      - name: Restart Nginx
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ env.droplet_ip }} sudo systemctl restart nginx
